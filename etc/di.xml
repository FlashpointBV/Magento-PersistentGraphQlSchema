<?xml version="1.0" ?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <!--
    Reroute "Magento\Framework\GraphQl\Config\Data" to our own cache class
    Normally "Magento\Framework\App\Cache\Type\Config" is used, resulting in bad performance on config cache invalidation
    -->
    <virtualType name="Magento\Framework\GraphQl\Config\Data">
        <arguments>
            <argument name="cache" xsi:type="object">HappyHorizon\PersistentGraphQlSchema\Model\Cache\GraphQlSchemaCache</argument>
        </arguments>
    </virtualType>

    <type name="HappyHorizon\PersistentGraphQlSchema\Model\Cache\GraphQlSchemaCache">
        <arguments>
            <!--
            virtualType name="Magento\Framework\GraphQlSchemaStitching\Reader"
            is declared in vendor/magento/module-graph-ql/etc/di.xml
            and injected here as "reader" argument for the __construct() method
            -->
            <argument name="reader" xsi:type="object">Magento\Framework\GraphQlSchemaStitching\Reader</argument>
        </arguments>
    </type>

    <!-- Declare plugin on global scope to soft refresh from every scope -->
    <type name="Magento\Framework\GraphQlSchemaStitching\Common\Reader">
        <plugin name="HappyHorizon_PersistentGraphQlSchema_Plugin_Graphql_Magento_Framework_GraphQlSchemaStitching_Common_Reader"
                type="HappyHorizon\PersistentGraphQlSchema\Plugin\Graphql\Magento\Framework\GraphQlSchemaStitching\Common\Reader"
                sortOrder="0"/>
    </type>
</config>